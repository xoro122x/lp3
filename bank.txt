from sklearn.preprocessing import LabelEncoder
en = LabelEncoder()
df['Geography'] = en.fit_transform(df['Geography'])
df['Gender'] = en.fit_transform(df['Gender'])
x = df.drop(columns = ['Exited'])
y = df['Exited']
from sklearn.preprocessing import StandardScaler,MinMaxScaler
sc = StandardScaler()
x = sc.fit_transform(x)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
model = Sequential()

model.add(Dense(16,activation='relu',input_dim = 10))
model.add(Dense(8,activation='relu'))


model.add(Dense(1,activation='sigmoid'))
model.summary()
model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])
history = model.fit(x_train,y_train,epochs=100,validation_split=0.2)

import numpy as np
pred = np.where(pred>0.5,1,0)
from sklearn.metrics import accuracy_score,confusion_matrix
import matplotlib.pyplot as plt
plt.plot(history.history['loss'],color ='green')
plt.plot(history.history['val_loss'],color = 'red')
plt.show()
plt.plot(history.history['accuracy'],color ='green')
plt.plot(history.history['val_accuracy'],color = 'red')
plt.show()
accuracy_score(y_test,pred)
confusion_matrix(y_test,pred)